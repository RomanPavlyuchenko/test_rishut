version: '3.4'
services:

  nginx:
    restart: always
    build:
      context: ./
      dockerfile: ./nginx/Dockerfile
    depends_on:
      - django
    ports:
      - 80:80
    volumes:
      - ./server/media:/nginx/media
      
  django:
    build:
      context: ./
      dockerfile: ./server/Dockerfile
    command: gunicorn config.wsgi -c ./config/gunicorn.py
    volumes:
      - ./server:/server
    ports:
      - "8000:8000"
    depends_on:
      - db
    env_file:
      - .env.prod
    restart: always
    environment:
      DEBUG: 'False'


  db:
    image: postgres:14.6-alpine
    env_file:
      - .env
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
